// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.36.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'error.freezed.dart';

@freezed
sealed class LiquidSdkError with _$LiquidSdkError implements FrbException {
  const LiquidSdkError._();

  const factory LiquidSdkError.alreadyStarted() = LiquidSdkError_AlreadyStarted;
  const factory LiquidSdkError.generic({
    required String err,
  }) = LiquidSdkError_Generic;
  const factory LiquidSdkError.notStarted() = LiquidSdkError_NotStarted;
}

@freezed
sealed class PaymentError with _$PaymentError implements FrbException {
  const PaymentError._();

  const factory PaymentError.alreadyClaimed() = PaymentError_AlreadyClaimed;
  const factory PaymentError.amountOutOfRange() = PaymentError_AmountOutOfRange;
  const factory PaymentError.generic({
    required String err,
  }) = PaymentError_Generic;
  const factory PaymentError.invalidOrExpiredFees() = PaymentError_InvalidOrExpiredFees;
  const factory PaymentError.insufficientFunds() = PaymentError_InsufficientFunds;
  const factory PaymentError.invalidInvoice() = PaymentError_InvalidInvoice;
  const factory PaymentError.invalidPreimage() = PaymentError_InvalidPreimage;
  const factory PaymentError.lwkError({
    required String err,
  }) = PaymentError_LwkError;
  const factory PaymentError.pairsNotFound() = PaymentError_PairsNotFound;
  const factory PaymentError.persistError() = PaymentError_PersistError;
  const factory PaymentError.refunded({
    required String err,
    required String refundTxId,
  }) = PaymentError_Refunded;
  const factory PaymentError.sendError({
    required String err,
  }) = PaymentError_SendError;
  const factory PaymentError.signerError({
    required String err,
  }) = PaymentError_SignerError;
}
