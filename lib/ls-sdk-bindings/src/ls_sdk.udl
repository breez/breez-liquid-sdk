[Error]
enum LsSdkError {
    "Generic",
};

[Error]
enum PaymentError {
    "AmountOutOfRange",
    "InvalidInvoice",
    "SendError",
    "PersistError",
    "InvalidPreimage",
    "AlreadyClaimed",
    "PairsNotFound",
    "SignerError",
    "BoltzError",
    "LwkError",
};

enum Network {
    "Liquid",
    "LiquidTestnet",
};

dictionary WalletInfo {
    u64 balance_sat;
    string pubkey;
};

dictionary PrepareSendResponse {
    string id;
    u64 payer_amount_sat;
    u64 receiver_amount_sat;
    u64 total_fees;
    string funding_address;
    string invoice;
};

dictionary SendPaymentResponse {
    string txid;
};

dictionary PrepareReceiveRequest {
    u64? payer_amount_sat;
    u64? receiver_amount_sat;
};

dictionary PrepareReceiveResponse {
    string pair_hash;
    u64 payer_amount_sat;
    u64 fees_sat;
};

dictionary ReceivePaymentResponse {
    string id;
    string invoice;
};

namespace ls_sdk {
    [Throws=LsSdkError]
    BindingWallet init(string mnemonic, string? data_dir, Network network);
};

interface BindingWallet {
    [Throws=LsSdkError]
    WalletInfo get_info(boolean with_scan);

    [Throws=PaymentError]
    PrepareSendResponse prepare_send_payment(string invoice);

    [Throws=PaymentError]
    SendPaymentResponse send_payment(PrepareSendResponse req);

    [Throws=PaymentError]
    PrepareReceiveResponse prepare_receive_payment(PrepareReceiveRequest req);

    [Throws=PaymentError]
    ReceivePaymentResponse receive_payment(PrepareReceiveResponse req);
};
